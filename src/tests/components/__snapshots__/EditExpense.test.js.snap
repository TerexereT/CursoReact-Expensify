// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render editexpense 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditExpenseDBPage
    editExpense={[Function]}
    expense={
        Object {
            "amount": 3321,
            "createdAt": 345600000,
            "description": "estas",
            "id": "2",
            "note": "",
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    removeExpense={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ExpenseForm
          expense={
                    Object {
                              "amount": 3321,
                              "createdAt": 345600000,
                              "description": "estas",
                              "id": "2",
                              "note": "",
                            }
          }
          onSubmit={[Function]}
/>,
        <button
          onClick={[Function]}
>
          Eliminar
</button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "expense": Object {
            "amount": 3321,
            "createdAt": 345600000,
            "description": "estas",
            "id": "2",
            "note": "",
          },
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Eliminar",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Eliminar",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ExpenseForm
            expense={
                        Object {
                                    "amount": 3321,
                                    "createdAt": 345600000,
                                    "description": "estas",
                                    "id": "2",
                                    "note": "",
                                  }
            }
            onSubmit={[Function]}
/>,
          <button
            onClick={[Function]}
>
            Eliminar
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "expense": Object {
              "amount": 3321,
              "createdAt": 345600000,
              "description": "estas",
              "id": "2",
              "note": "",
            },
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Eliminar",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Eliminar",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
